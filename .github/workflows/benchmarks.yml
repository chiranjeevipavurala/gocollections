name: Run Benchmarks

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  benchmark:
    runs-on: ubuntu-latest
    timeout-minutes: 15 # Add timeout to prevent hanging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        
    - name: Download dependencies
      run: |
        echo "Downloading dependencies..."
        go mod download
        go mod verify
        
    - name: Run benchmarks
      run: |
        echo "Running benchmarks..."
        go test -bench=. -benchtime=500ms -timeout=10m ./benchmark/ > benchmark_results.txt 2>&1 || {
          echo "Benchmark execution failed. Checking for errors..."
          go test -bench=. -benchtime=500ms -timeout=10m ./benchmark/ -v
          exit 1
        }
        
    - name: Run memory benchmarks
      run: |
        echo "Running memory benchmarks..."
        go test -bench=. -benchmem -benchtime=500ms -timeout=10m ./benchmark/ > benchmark_memory_results.txt 2>&1 || {
          echo "Memory benchmark execution failed. Checking for errors..."
          go test -bench=. -benchmem -benchtime=500ms -timeout=10m ./benchmark/ -v
          exit 1
        }
        
    - name: Generate benchmark report
      run: |
        echo "# Go Collections Benchmark Results" > benchmark_report.md
        echo "" >> benchmark_report.md
        echo "## System Information" >> benchmark_report.md
        echo "- Go version: $(go version)" >> benchmark_report.md
        echo "- Architecture: $(go env GOARCH)" >> benchmark_report.md
        echo "- OS: $(go env GOOS)" >> benchmark_report.md
        echo "- CPU cores: $(nproc)" >> benchmark_report.md
        echo "- Date: $(date)" >> benchmark_report.md
        echo "" >> benchmark_report.md
        echo "## Performance Benchmarks" >> benchmark_report.md
        echo "\`\`\`" >> benchmark_report.md
        cat benchmark_results.txt >> benchmark_report.md
        echo "\`\`\`" >> benchmark_report.md
        echo "" >> benchmark_report.md
        echo "## Memory Allocation Benchmarks" >> benchmark_report.md
        echo "\`\`\`" >> benchmark_report.md
        cat benchmark_memory_results.txt >> benchmark_report.md
        echo "\`\`\`" >> benchmark_report.md
        
    - name: Upload benchmark results as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results-${{ github.run_number }}
        path: |
          benchmark_results.txt
          benchmark_memory_results.txt
          benchmark_report.md
        retention-days: 30
        
    - name: Comment on PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('benchmark_report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ðŸš€ Benchmark Results\n\n${report}\n\nðŸ“Š [View full results as artifacts](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
          }); 